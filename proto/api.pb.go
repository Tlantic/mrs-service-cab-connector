// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 426 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0x5f, 0x8f, 0xd2, 0x40,
	0x14, 0xc5, 0xf7, 0x41, 0xcd, 0xee, 0x18, 0x75, 0x3b, 0xc6, 0xaa, 0xac, 0xee, 0x03, 0xfa, 0x4c,
	0xa2, 0x3e, 0x1a, 0x4d, 0x50, 0x92, 0x06, 0x03, 0x91, 0x50, 0x7c, 0x26, 0x43, 0xbd, 0x42, 0x43,
	0x99, 0xa9, 0xbd, 0xb7, 0x89, 0x7c, 0x2b, 0x3f, 0xa2, 0x99, 0xe9, 0x8c, 0xed, 0x94, 0x21, 0xfb,
	0x44, 0xf8, 0x9d, 0x73, 0xee, 0xbf, 0x29, 0xbb, 0x12, 0x65, 0x3e, 0x2a, 0x2b, 0x45, 0x8a, 0xdf,
	0x37, 0x3f, 0x83, 0xa8, 0xac, 0xf2, 0x0c, 0xd6, 0x74, 0x2c, 0x01, 0x47, 0x16, 0x21, 0xa9, 0x6c,
	0xef, 0xa1, 0x6b, 0x51, 0xd3, 0xce, 0x27, 0x24, 0xd0, 0xf7, 0x44, 0x85, 0xd8, 0x40, 0xe1, 0xa1,
	0x38, 0x13, 0x24, 0x0a, 0xb5, 0x5d, 0xc3, 0x1f, 0x82, 0x4a, 0x8a, 0xa2, 0xe1, 0xef, 0xff, 0x5e,
	0xb2, 0x27, 0xf3, 0x65, 0xfa, 0x55, 0x49, 0x09, 0x19, 0xa9, 0x6a, 0xbc, 0x98, 0xf2, 0x4f, 0x8c,
	0x27, 0x40, 0x33, 0xb5, 0xcd, 0xe5, 0x97, 0xe3, 0x0f, 0xd4, 0xf6, 0x03, 0x70, 0xde, 0x24, 0x46,
	0xe3, 0x9a, 0x76, 0x4b, 0xf8, 0x5d, 0x03, 0xd2, 0x20, 0xf2, 0x18, 0xd6, 0x05, 0x0d, 0x2f, 0xf8,
	0x3b, 0x76, 0x4f, 0xff, 0x0f, 0x06, 0x9e, 0xfa, 0x81, 0x52, 0x49, 0x84, 0xe1, 0x05, 0xff, 0xc6,
	0x1e, 0x25, 0x40, 0xba, 0x55, 0x4a, 0xaa, 0x02, 0xe4, 0x37, 0xd6, 0xe7, 0x51, 0x57, 0x64, 0x10,
	0x16, 0x6d, 0xfb, 0x09, 0x7b, 0x68, 0x85, 0xa9, 0xfc, 0xa5, 0xf8, 0x4b, 0xdf, 0xac, 0x99, 0xab,
	0xf3, 0x22, 0x24, 0xd9, 0x2a, 0x1f, 0xd9, 0x65, 0x02, 0x94, 0xea, 0xf3, 0xf3, 0xb8, 0xf5, 0x19,
	0xe0, 0xf2, 0xcf, 0x4e, 0xb8, 0x17, 0x5e, 0xe8, 0xe7, 0xec, 0x86, 0x0d, 0x08, 0x84, 0x2d, 0xf7,
	0xe6, 0x37, 0x6c, 0xf1, 0x3d, 0xed, 0xce, 0xef, 0x58, 0x60, 0xfe, 0x56, 0xb2, 0x55, 0x3e, 0xb3,
	0x2b, 0x87, 0x91, 0x3f, 0xef, 0x19, 0xff, 0x5f, 0x32, 0x3e, 0x15, 0xbc, 0x15, 0x66, 0xfa, 0x3b,
	0xea, 0xae, 0x60, 0x40, 0x60, 0x05, 0xcb, 0x6d, 0x78, 0xce, 0x1e, 0x37, 0x37, 0xa9, 0x00, 0x9b,
	0x13, 0xbe, 0xf2, 0x4e, 0xe5, 0xb0, 0x2b, 0x74, 0x73, 0x46, 0xf5, 0x76, 0x31, 0xcc, 0xdb, 0xa5,
	0x21, 0x81, 0x5d, 0x9c, 0x60, 0xf3, 0x29, 0xbb, 0xd6, 0x70, 0x5f, 0x9b, 0xe2, 0xa9, 0x28, 0x00,
	0xf9, 0x6d, 0xc7, 0xdd, 0x15, 0x5c, 0xb5, 0xd7, 0x67, 0x75, 0x5b, 0x14, 0x58, 0x9c, 0x00, 0x4d,
	0xc4, 0x41, 0x6c, 0x01, 0x27, 0x80, 0x94, 0x4b, 0x41, 0xb9, 0x92, 0xc8, 0xdf, 0xb6, 0xd1, 0x80,
	0xec, 0x1a, 0xbc, 0xb9, 0xc3, 0x65, 0xdb, 0xac, 0x58, 0xd4, 0x3a, 0x96, 0x20, 0x50, 0x77, 0xb8,
	0xed, 0x67, 0xad, 0x10, 0x18, 0xbe, 0xa7, 0xb7, 0xaf, 0x9b, 0x82, 0xfc, 0xb9, 0x12, 0xd8, 0x7e,
	0xdd, 0x0e, 0xf4, 0x5f, 0xb7, 0xe5, 0x4d, 0x78, 0xf3, 0xc0, 0xf0, 0x0f, 0xff, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x92, 0xbf, 0xde, 0xeb, 0xc2, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MRSConnectorAPIClient is the client API for MRSConnectorAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MRSConnectorAPIClient interface {
	GetLoginByUsername(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResult, error)
	Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error)
	GetUserStores(ctx context.Context, in *GetUserStoresRequest, opts ...grpc.CallOption) (*GetUserStoresResult, error)
	GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResult, error)
	GetStock(ctx context.Context, in *GetStockRequest, opts ...grpc.CallOption) (*GetStockResult, error)
	GetPrice(ctx context.Context, in *GetPriceRequest, opts ...grpc.CallOption) (*GetPriceResult, error)
	GetPricePOS(ctx context.Context, in *GetPricePOSRequest, opts ...grpc.CallOption) (*GetPricePOSResult, error)
	GetPrices(ctx context.Context, in *GetPricesRequest, opts ...grpc.CallOption) (*GetPricesResult, error)
	GetLabel(ctx context.Context, in *GetLabelRequest, opts ...grpc.CallOption) (*GetLabelResult, error)
	GetStoresStock(ctx context.Context, in *GetStoresStockRequest, opts ...grpc.CallOption) (*GetStoresStockResult, error)
	GetStocks(ctx context.Context, in *GetStocksRequest, opts ...grpc.CallOption) (*GetStocksResult, error)
	GetSkuStoreSales(ctx context.Context, in *GetSkuStoreSalesRequest, opts ...grpc.CallOption) (*GetSkuStoreSalesResult, error)
	GetDamagesDestinations(ctx context.Context, in *GetDamagesDestinationsRequest, opts ...grpc.CallOption) (*GetDamagesDestinationsResult, error)
	GetDamagesReasons(ctx context.Context, in *GetDamageReasonsRequest, opts ...grpc.CallOption) (*GetDamageReasonsResult, error)
	SendTask(ctx context.Context, in *SendTaskRequest, opts ...grpc.CallOption) (*SendTaskResult, error)
}

type mRSConnectorAPIClient struct {
	cc *grpc.ClientConn
}

func NewMRSConnectorAPIClient(cc *grpc.ClientConn) MRSConnectorAPIClient {
	return &mRSConnectorAPIClient{cc}
}

func (c *mRSConnectorAPIClient) GetLoginByUsername(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResult, error) {
	out := new(AuthResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetLoginByUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) Auth(ctx context.Context, in *AuthRequest, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/Auth", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetUserStores(ctx context.Context, in *GetUserStoresRequest, opts ...grpc.CallOption) (*GetUserStoresResult, error) {
	out := new(GetUserStoresResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetUserStores", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetUserInfo(ctx context.Context, in *GetUserInfoRequest, opts ...grpc.CallOption) (*GetUserInfoResult, error) {
	out := new(GetUserInfoResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetStock(ctx context.Context, in *GetStockRequest, opts ...grpc.CallOption) (*GetStockResult, error) {
	out := new(GetStockResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetPrice(ctx context.Context, in *GetPriceRequest, opts ...grpc.CallOption) (*GetPriceResult, error) {
	out := new(GetPriceResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetPricePOS(ctx context.Context, in *GetPricePOSRequest, opts ...grpc.CallOption) (*GetPricePOSResult, error) {
	out := new(GetPricePOSResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetPricePOS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetPrices(ctx context.Context, in *GetPricesRequest, opts ...grpc.CallOption) (*GetPricesResult, error) {
	out := new(GetPricesResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetPrices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetLabel(ctx context.Context, in *GetLabelRequest, opts ...grpc.CallOption) (*GetLabelResult, error) {
	out := new(GetLabelResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetStoresStock(ctx context.Context, in *GetStoresStockRequest, opts ...grpc.CallOption) (*GetStoresStockResult, error) {
	out := new(GetStoresStockResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetStoresStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetStocks(ctx context.Context, in *GetStocksRequest, opts ...grpc.CallOption) (*GetStocksResult, error) {
	out := new(GetStocksResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetStocks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetSkuStoreSales(ctx context.Context, in *GetSkuStoreSalesRequest, opts ...grpc.CallOption) (*GetSkuStoreSalesResult, error) {
	out := new(GetSkuStoreSalesResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetSkuStoreSales", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetDamagesDestinations(ctx context.Context, in *GetDamagesDestinationsRequest, opts ...grpc.CallOption) (*GetDamagesDestinationsResult, error) {
	out := new(GetDamagesDestinationsResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetDamagesDestinations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) GetDamagesReasons(ctx context.Context, in *GetDamageReasonsRequest, opts ...grpc.CallOption) (*GetDamageReasonsResult, error) {
	out := new(GetDamageReasonsResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/GetDamagesReasons", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mRSConnectorAPIClient) SendTask(ctx context.Context, in *SendTaskRequest, opts ...grpc.CallOption) (*SendTaskResult, error) {
	out := new(SendTaskResult)
	err := c.cc.Invoke(ctx, "/proto.MRSConnectorAPI/SendTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MRSConnectorAPIServer is the server API for MRSConnectorAPI service.
type MRSConnectorAPIServer interface {
	GetLoginByUsername(context.Context, *AuthRequest) (*AuthResult, error)
	Auth(context.Context, *AuthRequest) (*AuthResponse, error)
	GetUserStores(context.Context, *GetUserStoresRequest) (*GetUserStoresResult, error)
	GetUserInfo(context.Context, *GetUserInfoRequest) (*GetUserInfoResult, error)
	GetStock(context.Context, *GetStockRequest) (*GetStockResult, error)
	GetPrice(context.Context, *GetPriceRequest) (*GetPriceResult, error)
	GetPricePOS(context.Context, *GetPricePOSRequest) (*GetPricePOSResult, error)
	GetPrices(context.Context, *GetPricesRequest) (*GetPricesResult, error)
	GetLabel(context.Context, *GetLabelRequest) (*GetLabelResult, error)
	GetStoresStock(context.Context, *GetStoresStockRequest) (*GetStoresStockResult, error)
	GetStocks(context.Context, *GetStocksRequest) (*GetStocksResult, error)
	GetSkuStoreSales(context.Context, *GetSkuStoreSalesRequest) (*GetSkuStoreSalesResult, error)
	GetDamagesDestinations(context.Context, *GetDamagesDestinationsRequest) (*GetDamagesDestinationsResult, error)
	GetDamagesReasons(context.Context, *GetDamageReasonsRequest) (*GetDamageReasonsResult, error)
	SendTask(context.Context, *SendTaskRequest) (*SendTaskResult, error)
}

func RegisterMRSConnectorAPIServer(s *grpc.Server, srv MRSConnectorAPIServer) {
	s.RegisterService(&_MRSConnectorAPI_serviceDesc, srv)
}

func _MRSConnectorAPI_GetLoginByUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetLoginByUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetLoginByUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetLoginByUsername(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_Auth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).Auth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/Auth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).Auth(ctx, req.(*AuthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetUserStores_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserStoresRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetUserStores(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetUserStores",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetUserStores(ctx, req.(*GetUserStoresRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetUserInfo(ctx, req.(*GetUserInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetStock(ctx, req.(*GetStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetPrice(ctx, req.(*GetPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetPricePOS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPricePOSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetPricePOS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetPricePOS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetPricePOS(ctx, req.(*GetPricePOSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetPrices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPricesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetPrices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetPrices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetPrices(ctx, req.(*GetPricesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLabelRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetLabel(ctx, req.(*GetLabelRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetStoresStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStoresStockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetStoresStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetStoresStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetStoresStock(ctx, req.(*GetStoresStockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetStocks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStocksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetStocks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetStocks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetStocks(ctx, req.(*GetStocksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetSkuStoreSales_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSkuStoreSalesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetSkuStoreSales(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetSkuStoreSales",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetSkuStoreSales(ctx, req.(*GetSkuStoreSalesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetDamagesDestinations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDamagesDestinationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetDamagesDestinations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetDamagesDestinations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetDamagesDestinations(ctx, req.(*GetDamagesDestinationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_GetDamagesReasons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDamageReasonsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).GetDamagesReasons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/GetDamagesReasons",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).GetDamagesReasons(ctx, req.(*GetDamageReasonsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MRSConnectorAPI_SendTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendTaskRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MRSConnectorAPIServer).SendTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.MRSConnectorAPI/SendTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MRSConnectorAPIServer).SendTask(ctx, req.(*SendTaskRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MRSConnectorAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.MRSConnectorAPI",
	HandlerType: (*MRSConnectorAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetLoginByUsername",
			Handler:    _MRSConnectorAPI_GetLoginByUsername_Handler,
		},
		{
			MethodName: "Auth",
			Handler:    _MRSConnectorAPI_Auth_Handler,
		},
		{
			MethodName: "GetUserStores",
			Handler:    _MRSConnectorAPI_GetUserStores_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _MRSConnectorAPI_GetUserInfo_Handler,
		},
		{
			MethodName: "GetStock",
			Handler:    _MRSConnectorAPI_GetStock_Handler,
		},
		{
			MethodName: "GetPrice",
			Handler:    _MRSConnectorAPI_GetPrice_Handler,
		},
		{
			MethodName: "GetPricePOS",
			Handler:    _MRSConnectorAPI_GetPricePOS_Handler,
		},
		{
			MethodName: "GetPrices",
			Handler:    _MRSConnectorAPI_GetPrices_Handler,
		},
		{
			MethodName: "GetLabel",
			Handler:    _MRSConnectorAPI_GetLabel_Handler,
		},
		{
			MethodName: "GetStoresStock",
			Handler:    _MRSConnectorAPI_GetStoresStock_Handler,
		},
		{
			MethodName: "GetStocks",
			Handler:    _MRSConnectorAPI_GetStocks_Handler,
		},
		{
			MethodName: "GetSkuStoreSales",
			Handler:    _MRSConnectorAPI_GetSkuStoreSales_Handler,
		},
		{
			MethodName: "GetDamagesDestinations",
			Handler:    _MRSConnectorAPI_GetDamagesDestinations_Handler,
		},
		{
			MethodName: "GetDamagesReasons",
			Handler:    _MRSConnectorAPI_GetDamagesReasons_Handler,
		},
		{
			MethodName: "SendTask",
			Handler:    _MRSConnectorAPI_SendTask_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
